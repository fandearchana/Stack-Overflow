{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Archana\\\\ReactProject\\\\StackOverflowClone\\\\client\\\\src\\\\Pages\\\\UserProfile\\\\ProfileBio.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileBio = ({\n  currentProfile\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: (currentProfile === null || currentProfile === void 0 ? void 0 : currentProfile.tags.length) !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Tags watched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), currentProfile === null || currentProfile === void 0 ? void 0 : currentProfile.tags.map(tag => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" 0 tags watched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentProfile !== null && currentProfile !== void 0 && currentProfile.about ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentProfile === null || currentProfile === void 0 ? void 0 : currentProfile.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No bio found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = ProfileBio;\nexport default ProfileBio;\nvar _c;\n$RefreshReg$(_c, \"ProfileBio\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileBio","currentProfile","children","tags","length","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","about","_c","$RefreshReg$"],"sources":["C:/Users/Archana/ReactProject/StackOverflowClone/client/src/Pages/UserProfile/ProfileBio.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst ProfileBio = ({ currentProfile }) => {\r\n  return (\r\n    <div>\r\n        <div>\r\n            {\r\n                currentProfile?.tags.length!==0?(\r\n                    <>\r\n                    <h4>Tags watched</h4>\r\n                    {\r\n                        currentProfile?.tags.map(( tag ) =>(\r\n                            <p key = { tag }>{ tag }</p>\r\n                        ))\r\n                    }\r\n                    </>\r\n                ):(\r\n                    <p> 0 tags watched</p>\r\n                )\r\n            }\r\n        </div>\r\n        <div>\r\n            {\r\n                currentProfile?.about?(\r\n                    <>\r\n                    <h4>About</h4>\r\n                    <p>{ currentProfile?.about }</p>\r\n                    </>\r\n                ):(\r\n                    <p> No bio found</p>\r\n                )                        \r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileBio"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EACzC,oBACEJ,OAAA;IAAAK,QAAA,gBACIL,OAAA;MAAAK,QAAA,EAEQ,CAAAD,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEE,IAAI,CAACC,MAAM,MAAG,CAAC,gBAC3BP,OAAA,CAAAE,SAAA;QAAAG,QAAA,gBACAL,OAAA;UAAAK,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAEjBP,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEE,IAAI,CAACM,GAAG,CAAGC,GAAG,iBAC1Bb,OAAA;UAAAK,QAAA,EAAmBQ;QAAG,GAAXA,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC9B,CAAC;MAAA,eAEJ,CAAC,gBAEHX,OAAA;QAAAK,QAAA,EAAG;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACxB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC,eACNX,OAAA;MAAAK,QAAA,EAEQD,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAEU,KAAK,gBACjBd,OAAA,CAAAE,SAAA;QAAAG,QAAA,gBACAL,OAAA;UAAAK,QAAA,EAAI;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdX,OAAA;UAAAK,QAAA,EAAKD,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEU;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,eAC9B,CAAC,gBAEHX,OAAA;QAAAK,QAAA,EAAG;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACtB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAI,EAAA,GAjCKZ,UAAU;AAmChB,eAAeA,UAAU;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}