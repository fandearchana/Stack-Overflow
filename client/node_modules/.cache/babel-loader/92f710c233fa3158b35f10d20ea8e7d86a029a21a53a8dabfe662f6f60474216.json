{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Archana\\\\ReactProject\\\\StackOverflowClone\\\\client\\\\src\\\\Pages\\\\Questions\\\\QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Question.css';\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport copy from 'copy-to-clipboard';\nimport upVote from '../../assets/upVote.svg';\nimport downVote from '../../assets/downVote.svg';\nimport Avatar from '../../components/Avatar/Avatar';\nimport DisplayAnswer from './DisplayAnswer';\nimport { postAnswer } from '../../actions/question.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar QuestionDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const questionList = useSelector(state => state.questionsReducer);\n  const [Answer, setAnswer] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const User = useSelector(state => state.currentUserReducer);\n  const location = useLocation();\n  const url = 'http://localhost:3000';\n  const handlePostAns = (e, answerLength) => {\n    e.preventDefault();\n    if (User === null) {\n      alert('Login or signup to answer a question');\n      navigate('/Auth');\n    } else {\n      console.log(User.result.name);\n      if (Answer === '') {\n        alert('Enter an Answer befor submit');\n      } else {\n        dispatch(postAnswer({\n          id,\n          noOfAnswer: answerLength + 1,\n          answerBody: Answer,\n          userAnswerd: User.result.name,\n          userId: User === null || User === void 0 ? void 0 : User._id\n        }));\n      }\n    }\n  };\n  const handleShare = () => {\n    copy(url + location.pathname);\n    alert('copied url:' + url + location.pathname);\n  };\n  // const questionList=[{\n  //     id:'1',\n  //     upVotes:3,\n  //     downVotes:2,        \n  //     noOfAnswer: 2,\n  //     questionTitle:\"what is a function\",\n  //     questionBody:\"It meant to be\",\n  //     questionTags:[\"java\",\"nodejs\",\"reactjs\"],\n  //     userPosted:\"mano\",\n  //     askedOn:\"jan1\",\n  //     answer:[{\n  //       answerBody:\"Answer\",\n  //       userAnswered:'Kumar',\n  //       answerdOn:'jan 2',\n  //       userId:2\n  //     }]\n\n  //   },\n  //   {\n  //     id:'2',\n  //     upVotes:3,\n  //     downVotes:2,        \n  //     noOfAnswer: 2,\n  //     questionTitle:\"what is a function\",\n  //     questionBody:\"It meant to be\",\n  //     questionTags:[\"java\",\"nodejs\"],\n  //     userPosted:\"harry\",\n  //     askedOn:\"jan1\",\n  //     answer:[{\n  //       answerBody:\"Answer\",\n  //       userAnswered:'harry',\n  //       answerdOn:'jan 2',\n  //       userId:3 }]\n  //   },\n  //   {\n  //     id:'3',\n  //     upVotes:3,\n  //     downVotes:2,        \n  //     noOfAnswer: 3,\n  //     questionTitle:\"what is a function\",\n  //     questionBody:\"It meant to be\",\n  //     questionTags:[\"java\",\"nodejs\",\"reactjs\",\"mongodb\"],\n  //     userPosted:\"mano\",\n  //     askedOn:\"jan1\",\n  //     answer:[{\n  //       answerBody:\"Answer\",\n  //       userAnswered:'jack',\n  //       answerdOn:'jan 2',\n  //       userId:4 }]\n  //   }]\n  // const questionList = null\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-detail-page\",\n    children: questionList.data === null ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: questionList.data.filter(question => question._id === id).map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"question-details-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: question.questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-details-container-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-votes\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: upVote,\n                alt: \"upvote\",\n                width: \"18\",\n                className: \"votes-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: question.upVotes - question.downVotes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: downVote,\n                alt: \"downvote\",\n                width: \"18\",\n                className: \"votes-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"question-body\",\n                children: question.questionBody\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-details-tags\",\n                children: question.questionTags.map(tag => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: tag\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 46\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-action-uesr\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: handleShare,\n                    children: \"Share\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 42\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 42\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"asked \", moment(question.askedOn).fromNow()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 42\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/User/${question.userId}`,\n                    className: \"user-link\",\n                    style: {\n                      color: '#0086d8'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                      backgroundColor: \"orange\",\n                      px: \"8px\",\n                      py: \"5px\",\n                      borderRadius: \"10%\",\n                      children: question.userPosted.charAt(0).toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 46\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: question.userPosted\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 46\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 42\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), question.noOfAnswer !== 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [question.answer.length, \" answer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(DisplayAnswer, {\n            question: question,\n            handleShare: handleShare\n          }, question._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"post-ans-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your answer \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              handlePostAns(e, question.answer.length);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \" \",\n              cols: \"30\",\n              rows: \"10\",\n              onChange: e => setAnswer(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"post-ans-btn\",\n              value: \"Post your answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Browse other Question tagged\", question.questionTags.map(tag => /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Tags\",\n              className: \"ans-tag\",\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 42\n            }, this)), \" or\", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/AskQuestion\",\n              style: {\n                textDecoration: 'none',\n                color: '#009dff'\n              },\n              children: \" Ask your question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, question._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDetails, \"cmiBi+LJU1uLErOdEfESViwGghg=\", false, function () {\n  return [useParams, useSelector, useDispatch, useNavigate, useSelector, useLocation];\n});\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useState","Link","useParams","useNavigate","useLocation","moment","useDispatch","useSelector","copy","upVote","downVote","Avatar","DisplayAnswer","postAnswer","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionDetails","_s","id","questionList","state","questionsReducer","Answer","setAnswer","dispatch","navigate","User","currentUserReducer","location","url","handlePostAns","e","answerLength","preventDefault","alert","console","log","result","name","noOfAnswer","answerBody","userAnswerd","userId","_id","handleShare","pathname","className","children","data","fileName","_jsxFileName","lineNumber","columnNumber","filter","question","map","questionTitle","src","alt","width","upVotes","downVotes","style","questionBody","questionTags","tag","type","onClick","askedOn","fromNow","to","color","backgroundColor","px","py","borderRadius","userPosted","charAt","toUpperCase","answer","length","onSubmit","cols","rows","onChange","target","value","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/Archana/ReactProject/StackOverflowClone/client/src/Pages/Questions/QuestionDetails.jsx"],"sourcesContent":["import   React , {useState} from 'react'\r\nimport './Question.css'\r\nimport { Link,useParams,useNavigate, useLocation} from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport copy from 'copy-to-clipboard'\r\n\r\nimport upVote from '../../assets/upVote.svg'\r\nimport downVote from '../../assets/downVote.svg'\r\nimport Avatar from '../../components/Avatar/Avatar'\r\nimport DisplayAnswer from './DisplayAnswer'\r\nimport { postAnswer } from '../../actions/question.js'\r\n\r\n\r\nvar QuestionDetails = () => {  \r\n     const { id } = useParams()\r\n     const questionList = useSelector((state) => state.questionsReducer)\r\n    \r\n    const [Answer ,setAnswer] =useState('')\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const User = useSelector((state) => (state.currentUserReducer))      \r\n    const location = useLocation();\r\n    const url= 'http://localhost:3000'    \r\n     \r\n    \r\n    const handlePostAns=(e, answerLength) => {\r\n        e.preventDefault();\r\n        if(User === null){\r\n            alert('Login or signup to answer a question')\r\n            navigate('/Auth')\r\n        }else{\r\n            console.log( User.result.name)\r\n            if(Answer ===''){\r\n                alert('Enter an Answer befor submit')\r\n            }else{\r\n                dispatch( postAnswer({ id , noOfAnswer: answerLength + 1, answerBody: Answer, userAnswerd : User.result.name, userId:User?._id}))\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleShare = () =>{\r\n        copy(url + location.pathname)\r\n        alert('copied url:' + url + location.pathname)\r\n    } \r\n    // const questionList=[{\r\n    //     id:'1',\r\n    //     upVotes:3,\r\n    //     downVotes:2,        \r\n    //     noOfAnswer: 2,\r\n    //     questionTitle:\"what is a function\",\r\n    //     questionBody:\"It meant to be\",\r\n    //     questionTags:[\"java\",\"nodejs\",\"reactjs\"],\r\n    //     userPosted:\"mano\",\r\n    //     askedOn:\"jan1\",\r\n    //     answer:[{\r\n    //       answerBody:\"Answer\",\r\n    //       userAnswered:'Kumar',\r\n    //       answerdOn:'jan 2',\r\n    //       userId:2\r\n    //     }]\r\n    \r\n    //   },\r\n    //   {\r\n    //     id:'2',\r\n    //     upVotes:3,\r\n    //     downVotes:2,        \r\n    //     noOfAnswer: 2,\r\n    //     questionTitle:\"what is a function\",\r\n    //     questionBody:\"It meant to be\",\r\n    //     questionTags:[\"java\",\"nodejs\"],\r\n    //     userPosted:\"harry\",\r\n    //     askedOn:\"jan1\",\r\n    //     answer:[{\r\n    //       answerBody:\"Answer\",\r\n    //       userAnswered:'harry',\r\n    //       answerdOn:'jan 2',\r\n    //       userId:3 }]\r\n    //   },\r\n    //   {\r\n    //     id:'3',\r\n    //     upVotes:3,\r\n    //     downVotes:2,        \r\n    //     noOfAnswer: 3,\r\n    //     questionTitle:\"what is a function\",\r\n    //     questionBody:\"It meant to be\",\r\n    //     questionTags:[\"java\",\"nodejs\",\"reactjs\",\"mongodb\"],\r\n    //     userPosted:\"mano\",\r\n    //     askedOn:\"jan1\",\r\n    //     answer:[{\r\n    //       answerBody:\"Answer\",\r\n    //       userAnswered:'jack',\r\n    //       answerdOn:'jan 2',\r\n    //       userId:4 }]\r\n    //   }]\r\n    // const questionList = null\r\n    \r\n  return (   \r\n    <div className='question-detail-page'>\r\n     {\r\n        questionList.data === null ? \r\n        <h1>Loading..</h1> :\r\n        <>\r\n        {\r\n            questionList.data.filter(question => question._id === id).map(question =>(\r\n                <div key={question._id}>\r\n                    <section className='question-details-container'>\r\n                        <h1>{question.questionTitle}</h1>\r\n                        <div className=\"question-details-container-2\">\r\n                            <div className=\"question-votes\">\r\n                                <img src={upVote} alt='upvote' width='18' className='votes-icon'/>\r\n                                <p>{question.upVotes - question.downVotes}</p>\r\n                                <img src={downVote} alt='downvote' width='18' className='votes-icon'/>\r\n                            </div>\r\n                            <div style={{width:'100%'}}>                                \r\n                                <p className='question-body'>{question.questionBody}</p>\r\n                                <div className=\"question-details-tags\">\r\n                                     {\r\n                                         question.questionTags.map((tag)=>(\r\n                                             <p key={tag}>{tag}</p>\r\n                                         ))\r\n                                     }\r\n                                 </div>\r\n                                <div className=\"question-action-uesr\">\r\n                                    <div>\r\n                                         <button type='button' onClick = {handleShare} >Share</button>\r\n                                         <button type='button'>Delete</button>\r\n                                    </div>                               \r\n                                    <div>\r\n                                         <p>asked {moment(question.askedOn).fromNow()}</p>\r\n                                         <Link to = {`/User/${question.userId}`} className ='user-link' style= {{color:'#0086d8'}}>\r\n                                             <Avatar backgroundColor = 'orange' px ='8px' py ='5px' borderRadius = \"10%\">\r\n                                                 {question.userPosted.charAt(0).toUpperCase()}\r\n                                             </Avatar>\r\n                                             <div>\r\n                                                 {question.userPosted}\r\n                                             </div>\r\n                                         </Link>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                        </div> \r\n                    </section>\r\n                    {\r\n                         question.noOfAnswer !== 0 && (\r\n                            <section>\r\n                                    <h3>{question.answer.length} answer</h3>\r\n                                    <DisplayAnswer key = { question._id } question = { question }  handleShare ={ handleShare }/>\r\n                            </section>\r\n                            )\r\n                    }\r\n                    <section className='post-ans-container'>\r\n                             <h3>Your answer </h3>\r\n                             <form onSubmit = {(e) => {handlePostAns(e, question.answer.length)}}>\r\n                                 <textarea id=' ' cols ='30' rows ='10' onChange = {e => setAnswer(e.target.value)} ></textarea>\r\n                                 <input type ='submit' className ='post-ans-btn' value ='Post your answer'/>\r\n                             </form>\r\n                             <p>\r\n                                 Browse other Question tagged\r\n                                 {\r\n                                     question.questionTags.map((tag) => (\r\n                                         <Link to = '/Tags' key = { tag } className ='ans-tag'>{ tag }</Link>\r\n                                     ))\r\n                                 } or  \r\n                                 <Link to ='/AskQuestion' style = {{ textDecoration: 'none', color: '#009dff'}}> Ask your question</Link>                            \r\n                             </p>\r\n                    </section>\r\n                        \r\n                </div>\r\n            ))\r\n        }\r\n        </>           \r\n    }\r\n  </div>       \r\n )  \r\n}\r\n   \r\n\r\nexport default QuestionDetails"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}