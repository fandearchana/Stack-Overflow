{"ast":null,"code":"import * as api from '../api';\nexport const askQuestion = (questionData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.postQuestion(questionData);\n    dispatch({\n      type: \"POST_QUESTION\",\n      payload: data\n    });\n    dispatch(fetchAllQuestions());\n    navigate('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllQuestions = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllQuestions();\n    dispatch({\n      type: 'FETCH_ALL_QUESTIONS',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postAnswer = answerdata => async dispatch => {\n  try {\n    const {\n      id,\n      noOfAnswers,\n      answerBody,\n      userAnswerd\n    } = answerdata;\n    const {\n      data\n    } = await api.postAnswer(id, noOfAnswers, answerBody, userAnswerd);\n    dispatch({\n      type: 'POST_ANSWER',\n      payload: data\n    });\n    dispatch(fetchAllQuestions);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","askQuestion","questionData","navigate","dispatch","data","postQuestion","type","payload","fetchAllQuestions","error","console","log","getAllQuestions","postAnswer","answerdata","id","noOfAnswers","answerBody","userAnswerd"],"sources":["C:/Users/Archana/ReactProject/StackOverflowClone/client/src/actions/question.js"],"sourcesContent":["import * as api from '../api'\r\nexport const askQuestion =(questionData, navigate) =>async(dispatch)=>{\r\n    try{\r\n        const {data} = await api.postQuestion(questionData)\r\n        dispatch({type:\"POST_QUESTION\",\r\n        payload : data})\r\n        dispatch (fetchAllQuestions());\r\n        navigate('/')\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchAllQuestions = () =>async (dispatch) => {\r\n    try{\r\n        const { data } = await api.getAllQuestions()\r\n        dispatch({\r\n            type:'FETCH_ALL_QUESTIONS',\r\n            payload:data\r\n        })        \r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n export const postAnswer = (answerdata) => async (dispatch) =>{\r\n    try{\r\n        const {id, noOfAnswers, answerBody, userAnswerd} = answerdata;\r\n        const {data} = await api.postAnswer(id, noOfAnswers, answerBody, userAnswerd);\r\n        dispatch({type:'POST_ANSWER', payload : data});\r\n        dispatch(fetchAllQuestions)\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n }\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,OAAO,MAAMC,WAAW,GAAEA,CAACC,YAAY,EAAEC,QAAQ,KAAI,MAAMC,QAAQ,IAAG;EAClE,IAAG;IACC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAML,GAAG,CAACM,YAAY,CAACJ,YAAY,CAAC;IACnDE,QAAQ,CAAC;MAACG,IAAI,EAAC,eAAe;MAC9BC,OAAO,EAAGH;IAAI,CAAC,CAAC;IAChBD,QAAQ,CAAEK,iBAAiB,CAAC,CAAC,CAAC;IAC9BN,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,QAAMO,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMD,iBAAiB,GAAGA,CAAA,KAAK,MAAOL,QAAQ,IAAK;EACtD,IAAG;IACC,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACa,eAAe,CAAC,CAAC;IAC5CT,QAAQ,CAAC;MACLG,IAAI,EAAC,qBAAqB;MAC1BC,OAAO,EAACH;IACZ,CAAC,CAAC;EACN,CAAC,CACD,OAAMK,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AACA,OAAO,MAAMI,UAAU,GAAIC,UAAU,IAAK,MAAOX,QAAQ,IAAI;EAC1D,IAAG;IACC,MAAM;MAACY,EAAE;MAAEC,WAAW;MAAEC,UAAU;MAAEC;IAAW,CAAC,GAAGJ,UAAU;IAC7D,MAAM;MAACV;IAAI,CAAC,GAAG,MAAML,GAAG,CAACc,UAAU,CAACE,EAAE,EAAEC,WAAW,EAAEC,UAAU,EAAEC,WAAW,CAAC;IAC7Ef,QAAQ,CAAC;MAACG,IAAI,EAAC,aAAa;MAAEC,OAAO,EAAGH;IAAI,CAAC,CAAC;IAC9CD,QAAQ,CAACK,iBAAiB,CAAC;EAC/B,CAAC,CACD,OAAMC,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}