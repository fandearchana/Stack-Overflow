{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Archana\\\\ReactProject\\\\StackOverflowClone\\\\client\\\\src\\\\Pages\\\\Questions\\\\QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Question.css';\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport copy from 'copy-to-clipboard';\nimport upVote from '../../assets/upVote.svg';\nimport downVote from '../../assets/downVote.svg';\nimport Avatar from '../../components/Avatar/Avatar';\nimport DisplayAnswer from './DisplayAnswer';\nimport { postAnswer, deleteQuestion, voteQuestion } from '../../actions/question.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar QuestionDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const questionList = useSelector(state => state.questionsReducer);\n  console.log(questionList);\n  const [Answer, setAnswer] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const User = useSelector(state => state.currentUserReducer);\n  const location = useLocation();\n  const url = 'http://localhost:3000';\n  const handlePostAns = (e, answerLength) => {\n    e.preventDefault();\n    if (User === null) {\n      alert('Login or signup to answer a question');\n      navigate('/Auth');\n    } else {\n      console.log(User.result.name);\n      if (Answer === '') {\n        alert('Enter an Answer befor submitting');\n      } else {\n        dispatch(postAnswer({\n          id,\n          noOfAnswer: answerLength + 1,\n          answerBody: Answer,\n          userAnswerd: User.result.name,\n          userId: User.result._id\n        }));\n        setAnswer('');\n      }\n    }\n  };\n  const handleShare = () => {\n    copy(url + location.pathname);\n    alert('copied url:' + url + location.pathname);\n  };\n  const handleDelete = () => {\n    dispatch(deleteQuestion(id, navigate));\n  };\n  const handleUpVote = () => {\n    dispatch(voteQuestion(id, 'upVote', User.result._id));\n  };\n  const handleDownVote = () => {\n    dispatch(voteQuestion(id, 'downVote', User.result._id));\n  };\n  // const questionList=[{\n  //     id:'1',\n  //     upVotes:3,\n  //     downVotes:2,        \n  //     noOfAnswer: 2,\n  //     questionTitle:\"what is a function\",\n  //     questionBody:\"It meant to be\",\n  //     questionTags:[\"java\",\"nodejs\",\"reactjs\"],\n  //     userPosted:\"mano\",\n  //     askedOn:\"jan1\",\n  //     answer:[{\n  //       answerBody:\"Answer\",\n  //       userAnswered:'Kumar',\n  //       answerdOn:'jan 2',\n  //       userId:2\n  //     }]\n\n  //   },\n  //   {\n  //     id:'2',\n  //     upVotes:3,\n  //     downVotes:2,        \n  //     noOfAnswer: 2,\n  //     questionTitle:\"what is a function\",\n  //     questionBody:\"It meant to be\",\n  //     questionTags:[\"java\",\"nodejs\"],\n  //     userPosted:\"harry\",\n  //     askedOn:\"jan1\",\n  //     answer:[{\n  //       answerBody:\"Answer\",\n  //       userAnswered:'harry',\n  //       answerdOn:'jan 2',\n  //       userId:3 }]\n  //   },\n  //   {\n  //     id:'3',\n  //     upVotes:3,\n  //     downVotes:2,        \n  //     noOfAnswer: 3,\n  //     questionTitle:\"what is a function\",\n  //     questionBody:\"It meant to be\",\n  //     questionTags:[\"java\",\"nodejs\",\"reactjs\",\"mongodb\"],\n  //     userPosted:\"mano\",\n  //     askedOn:\"jan1\",\n  //     answer:[{\n  //       answerBody:\"Answer\",\n  //       userAnswered:'jack',\n  //       answerdOn:'jan 2',\n  //       userId:4 }]\n  //   }]\n  // const questionList = null\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-detail-page\",\n    children: questionList.data === null ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: questionList.data.filter(question => question._id === id).map(question => {\n        var _User$result;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"question-details-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: question.questionTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-details-container-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-votes\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: upVote,\n                  alt: \"upvote\",\n                  width: \"18\",\n                  className: \"votes-icon\",\n                  onClick: handleUpVote\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: question.upVote.length - question.downVote.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: downVote,\n                  alt: \"downvote\",\n                  width: \"18\",\n                  className: \"votes-icon\",\n                  onClick: handleDownVote\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"question-body\",\n                  children: question.questionBody\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-details-tags\",\n                  children: question.questionTags.map(tag => /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: tag\n                  }, tag, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 46\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-action-uesr\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: handleShare,\n                      children: \"Share\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 42\n                    }, this), (User === null || User === void 0 ? void 0 : (_User$result = User.result) === null || _User$result === void 0 ? void 0 : _User$result._id) === (question === null || question === void 0 ? void 0 : question.userId) && /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: handleDelete,\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"asked \", moment(question.askedOn).fromNow()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 42\n                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/User/${question.userId}`,\n                      className: \"user-link\",\n                      style: {\n                        color: '#0086d8'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                        backgroundColor: \"orange\",\n                        px: \"8px\",\n                        py: \"5px\",\n                        borderRadius: \"10%\",\n                        children: question.userPosted.charAt(0).toUpperCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 46\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: question.userPosted\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 46\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 42\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), question.noOfAnswer !== 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [question.answer.length, \" answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(DisplayAnswer, {\n              question: question,\n              handleShare: handleShare\n            }, question._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"post-ans-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your answer \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                handlePostAns(e, question.answer.length);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \" \",\n                cols: \"30\",\n                rows: \"10\",\n                onChange: e => setAnswer(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"post-ans-btn\",\n                value: \"Post your answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Browse other Question tagged\", question.questionTags.map(tag => /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Tags\",\n                className: \"ans-tag\",\n                children: tag\n              }, tag, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 42\n              }, this)), \" or\", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/AskQuestion\",\n                style: {\n                  textDecoration: 'none',\n                  color: '#009dff'\n                },\n                children: \" Ask your question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDetails, \"cmiBi+LJU1uLErOdEfESViwGghg=\", false, function () {\n  return [useParams, useSelector, useDispatch, useNavigate, useSelector, useLocation];\n});\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useState","Link","useParams","useNavigate","useLocation","moment","useDispatch","useSelector","copy","upVote","downVote","Avatar","DisplayAnswer","postAnswer","deleteQuestion","voteQuestion","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionDetails","_s","id","questionList","state","questionsReducer","console","log","Answer","setAnswer","dispatch","navigate","User","currentUserReducer","location","url","handlePostAns","e","answerLength","preventDefault","alert","result","name","noOfAnswer","answerBody","userAnswerd","userId","_id","handleShare","pathname","handleDelete","handleUpVote","handleDownVote","className","children","data","fileName","_jsxFileName","lineNumber","columnNumber","filter","question","map","_User$result","questionTitle","src","alt","width","onClick","length","style","questionBody","questionTags","tag","type","askedOn","fromNow","to","color","backgroundColor","px","py","borderRadius","userPosted","charAt","toUpperCase","answer","onSubmit","cols","rows","onChange","target","value","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/Archana/ReactProject/StackOverflowClone/client/src/Pages/Questions/QuestionDetails.jsx"],"sourcesContent":["import   React , {useState} from 'react'\r\nimport './Question.css'\r\nimport { Link,useParams,useNavigate, useLocation} from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport copy from 'copy-to-clipboard'\r\n\r\nimport upVote from '../../assets/upVote.svg'\r\nimport downVote from '../../assets/downVote.svg'\r\nimport Avatar from '../../components/Avatar/Avatar'\r\nimport DisplayAnswer from './DisplayAnswer'\r\nimport { postAnswer, deleteQuestion, voteQuestion} from '../../actions/question.js'\r\n\r\n\r\nvar QuestionDetails = () => {  \r\n     const { id } = useParams()\r\n     const questionList = useSelector((state) => state.questionsReducer)\r\n    console.log(questionList)\r\n    const [Answer ,setAnswer] =useState('')\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const User = useSelector((state) => (state.currentUserReducer))      \r\n    const location = useLocation();\r\n    const url= 'http://localhost:3000'    \r\n     \r\n    \r\n    const handlePostAns=(e, answerLength) => {\r\n        e.preventDefault();\r\n        if(User === null){\r\n            alert('Login or signup to answer a question')\r\n            navigate('/Auth')\r\n        }else{\r\n            console.log( User.result.name)\r\n            if(Answer ===''){\r\n                alert('Enter an Answer befor submitting')\r\n            }else{\r\n                dispatch( postAnswer({ id , noOfAnswer: answerLength + 1, answerBody: Answer, userAnswerd : User.result.name, userId: User.result._id}))\r\n                setAnswer('')\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleShare = () =>{\r\n        copy(url + location.pathname)\r\n        alert('copied url:' + url + location.pathname)\r\n    } \r\n\r\n    const handleDelete = () =>{\r\n        dispatch( deleteQuestion( id, navigate ))\r\n    }\r\n\r\n    const handleUpVote = () =>{       \r\n        dispatch( voteQuestion(id ,'upVote', User.result._id))\r\n    }\r\n\r\n    const handleDownVote = () =>{       \r\n        dispatch( voteQuestion(id ,'downVote', User.result._id))\r\n    }\r\n    // const questionList=[{\r\n    //     id:'1',\r\n    //     upVotes:3,\r\n    //     downVotes:2,        \r\n    //     noOfAnswer: 2,\r\n    //     questionTitle:\"what is a function\",\r\n    //     questionBody:\"It meant to be\",\r\n    //     questionTags:[\"java\",\"nodejs\",\"reactjs\"],\r\n    //     userPosted:\"mano\",\r\n    //     askedOn:\"jan1\",\r\n    //     answer:[{\r\n    //       answerBody:\"Answer\",\r\n    //       userAnswered:'Kumar',\r\n    //       answerdOn:'jan 2',\r\n    //       userId:2\r\n    //     }]\r\n    \r\n    //   },\r\n    //   {\r\n    //     id:'2',\r\n    //     upVotes:3,\r\n    //     downVotes:2,        \r\n    //     noOfAnswer: 2,\r\n    //     questionTitle:\"what is a function\",\r\n    //     questionBody:\"It meant to be\",\r\n    //     questionTags:[\"java\",\"nodejs\"],\r\n    //     userPosted:\"harry\",\r\n    //     askedOn:\"jan1\",\r\n    //     answer:[{\r\n    //       answerBody:\"Answer\",\r\n    //       userAnswered:'harry',\r\n    //       answerdOn:'jan 2',\r\n    //       userId:3 }]\r\n    //   },\r\n    //   {\r\n    //     id:'3',\r\n    //     upVotes:3,\r\n    //     downVotes:2,        \r\n    //     noOfAnswer: 3,\r\n    //     questionTitle:\"what is a function\",\r\n    //     questionBody:\"It meant to be\",\r\n    //     questionTags:[\"java\",\"nodejs\",\"reactjs\",\"mongodb\"],\r\n    //     userPosted:\"mano\",\r\n    //     askedOn:\"jan1\",\r\n    //     answer:[{\r\n    //       answerBody:\"Answer\",\r\n    //       userAnswered:'jack',\r\n    //       answerdOn:'jan 2',\r\n    //       userId:4 }]\r\n    //   }]\r\n    // const questionList = null\r\n    \r\n  return (   \r\n    <div className='question-detail-page'>\r\n     {\r\n        questionList.data === null ? \r\n        <h1>Loading..</h1> :\r\n        <>\r\n        {\r\n            questionList.data.filter(question => question._id === id).map(question =>(\r\n                <div key={question._id}>\r\n                    <section className='question-details-container'>\r\n                        <h1>{question.questionTitle}</h1>\r\n                        <div className=\"question-details-container-2\">\r\n                            <div className=\"question-votes\">\r\n                                <img src={upVote} alt='upvote' width='18' className='votes-icon' onClick={handleUpVote}/>\r\n                                <p>{question.upVote.length - question.downVote.length}</p>\r\n                                <img src={downVote} alt='downvote' width='18' className='votes-icon' onClick={handleDownVote}/>\r\n                            </div>\r\n                            <div style={{width:'100%'}}>                                \r\n                                <p className='question-body'>{question.questionBody}</p>\r\n                                <div className=\"question-details-tags\">\r\n                                     {\r\n                                         question.questionTags.map((tag)=>(\r\n                                             <p key={tag}>{tag}</p>\r\n                                         ))\r\n                                     }\r\n                                 </div>\r\n                                <div className=\"question-action-uesr\">\r\n                                    <div>\r\n                                         <button type='button' onClick = {handleShare} >Share</button>\r\n                                         {\r\n                                            User?.result?._id === question?.userId &&\r\n                                            <button type='button' onClick={handleDelete}>Delete</button>\r\n                                         }                                         \r\n                                    </div>                               \r\n                                    <div>\r\n                                         <p>asked {moment(question.askedOn).fromNow()}</p>\r\n                                         <Link to = {`/User/${question.userId}`} className ='user-link' style= {{color:'#0086d8'}}>\r\n                                             <Avatar backgroundColor = 'orange' px ='8px' py ='5px' borderRadius = \"10%\">\r\n                                                 {question.userPosted.charAt(0).toUpperCase()}\r\n                                             </Avatar>\r\n                                             <div>\r\n                                                 {question.userPosted}\r\n                                             </div>\r\n                                         </Link>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                        </div> \r\n                    </section>\r\n                    {\r\n                         question.noOfAnswer !== 0 && (\r\n                            <section>\r\n                                    <h3>{question.answer.length} answer</h3>\r\n                                    <DisplayAnswer key = { question._id } question = { question }  handleShare ={ handleShare }/>\r\n                            </section>\r\n                            )\r\n                    }\r\n                    <section className='post-ans-container'>\r\n                             <h3>Your answer </h3>\r\n                             <form onSubmit = {(e) => {handlePostAns(e, question.answer.length)}}>\r\n                                 <textarea id=' ' cols ='30' rows ='10' onChange = {e => setAnswer(e.target.value)} ></textarea>\r\n                                 <input type ='submit' className ='post-ans-btn' value ='Post your answer'/>\r\n                             </form>\r\n                             <p>\r\n                                 Browse other Question tagged\r\n                                 {\r\n                                     question.questionTags.map((tag) => (\r\n                                         <Link to = '/Tags' key = { tag } className ='ans-tag'>{ tag }</Link>\r\n                                     ))\r\n                                 } or  \r\n                                 <Link to ='/AskQuestion' style = {{ textDecoration: 'none', color: '#009dff'}}> Ask your question</Link>                            \r\n                             </p>\r\n                    </section>\r\n                        \r\n                </div>\r\n            ))\r\n        }\r\n        </>           \r\n    }\r\n  </div>       \r\n )  \r\n}\r\n   \r\n\r\nexport default QuestionDetails"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}