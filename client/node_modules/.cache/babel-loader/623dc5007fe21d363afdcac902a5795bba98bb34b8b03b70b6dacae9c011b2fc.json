{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Archana\\\\ReactProject\\\\StackOverflowClone\\\\client\\\\src\\\\Pages\\\\Questions\\\\DisplayAnswer.jsx\";\nimport React from 'react';\nimport Avatar from '../../components/Avatar/Avatar';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayAnswer = ({\n  question,\n  handleShare\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: question.answer.map(ans => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-ans\",\n      children: [console.log(ans._id), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ans.answerBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-action-uesr\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"display-ans-btn\",\n            onClick: handleShare,\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"display-ans-btn\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"answered \", moment(ans.answerdOn).fromNow()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/User/${question.userId}`,\n            className: \"user-link\",\n            style: {\n              color: '#0086d8'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              backgroundColor: \"green\",\n              px: \"8px\",\n              py: \"5px\",\n              borderRadius: \"3px\",\n              children: ans.userAnswerd.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: ans.userAnswerd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)]\n    }, ans._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = DisplayAnswer;\nexport default DisplayAnswer;\nvar _c;\n$RefreshReg$(_c, \"DisplayAnswer\");","map":{"version":3,"names":["React","Avatar","Link","moment","jsxDEV","_jsxDEV","DisplayAnswer","question","handleShare","children","answer","map","ans","className","console","log","_id","answerBody","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","answerdOn","fromNow","to","userId","style","color","backgroundColor","px","py","borderRadius","userAnswerd","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Archana/ReactProject/StackOverflowClone/client/src/Pages/Questions/DisplayAnswer.jsx"],"sourcesContent":["import React from 'react'\r\nimport Avatar from '../../components/Avatar/Avatar'\r\nimport {Link} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst DisplayAnswer = ({question, handleShare}) => {\r\n  return (\r\n    <div >\r\n        {\r\n            question.answer.map((ans)=>(\r\n                <div className=\"display-ans\" key={ans._id}>\r\n                   { console.log(ans._id)}\r\n                    <p>{ans.answerBody}</p>\r\n                    <div className=\"question-action-uesr\">\r\n                            <div>\r\n                                <button type='button' className='display-ans-btn' onClick = { handleShare }>Share</button>\r\n                                <button type='button' className='display-ans-btn'>Delete</button>\r\n                            </div>\r\n                            <div>\r\n                                <p>answered {moment(ans.answerdOn).fromNow()}</p>\r\n                                <Link to={`/User/${question.userId}`} className='user-link' style={{color:'#0086d8'}}>\r\n                                    <Avatar backgroundColor='green' px='8px' py='5px' borderRadius=\"3px\">\r\n                                      {ans.userAnswerd.charAt(0).toUpperCase()} \r\n                                    </Avatar>\r\n                                    <div>\r\n                                       {ans.userAnswerd}\r\n                                    </div>\r\n                                </Link>\r\n                            </div>                        \r\n                    </div>\r\n                </div>\r\n            ))\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayAnswer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}