{"ast":null,"code":"import * as api from '../api';\nexport const signUp = (authData, Navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signUp(authData);\n    dispatch({\n      type: 'AUTH',\n      data\n    });\n    navigate('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logIn = (authData, Navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.logIn(authData);\n    dispatch({\n      type: 'AUTH',\n      data\n    });\n    navigate('/');\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","signUp","authData","Navigate","dispatch","data","type","navigate","error","console","log","logIn"],"sources":["C:/Users/Archana/ReactProject/StackOverflowClone/client/src/actions/auth.js"],"sourcesContent":["import *as api from'../api'\r\n\r\nexport const signUp = (authData , Navigate) => async(dispatch) =>{\r\n    try{\r\n         const {data} = await api.signUp(authData)\r\n         dispatch({type : 'AUTH', data})\r\n         navigate('/')\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\nexport const logIn = (authData , Navigate) =>async(dispatch) => {\r\n    try{\r\n        const {data} = await api.logIn(authData)\r\n        dispatch({type : 'AUTH', data})\r\n        navigate('/')\r\n   }\r\n   catch(error){\r\n       console.log(error)\r\n   }\r\n}"],"mappings":"AAAA,OAAO,KAAIA,GAAG,MAAK,QAAQ;AAE3B,OAAO,MAAMC,MAAM,GAAGA,CAACC,QAAQ,EAAGC,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EAC7D,IAAG;IACE,MAAM;MAACC;IAAI,CAAC,GAAG,MAAML,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC;IACzCE,QAAQ,CAAC;MAACE,IAAI,EAAG,MAAM;MAAED;IAAI,CAAC,CAAC;IAC/BE,QAAQ,CAAC,GAAG,CAAC;EAClB,CAAC,CACD,OAAMC,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMG,KAAK,GAAGA,CAACT,QAAQ,EAAGC,QAAQ,KAAI,MAAMC,QAAQ,IAAK;EAC5D,IAAG;IACC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAML,GAAG,CAACW,KAAK,CAACT,QAAQ,CAAC;IACxCE,QAAQ,CAAC;MAACE,IAAI,EAAG,MAAM;MAAED;IAAI,CAAC,CAAC;IAC/BE,QAAQ,CAAC,GAAG,CAAC;EAClB,CAAC,CACD,OAAMC,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}