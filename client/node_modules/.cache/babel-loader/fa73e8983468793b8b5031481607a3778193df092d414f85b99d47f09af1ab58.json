{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Archana\\\\ReactProject\\\\StackOverflowClone\\\\client\\\\src\\\\Pages\\\\Questions\\\\QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Question.css';\nimport { Link, useParams } from 'react-router-dom';\nimport upVote from '../../assets/upVote.svg';\nimport downVote from '../../assets/downVote.svg';\nimport Avatar from '../../components/Avatar/Avatar';\nimport DisplayAnswer from './DisplayAnswer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const questionList = [{\n    id: '1',\n    upVotes: 3,\n    downVotes: 2,\n    noOfAnswer: 2,\n    questionTitle: \"what is a function\",\n    questionBody: \"It meant to be\",\n    questionTags: [\"java\", \"nodejs\", \"reactjs\"],\n    userPosted: \"mano\",\n    askedOn: \"jan1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'Kumar',\n      answerdOn: 'jan 2',\n      userId: 2\n    }]\n  }, {\n    id: '2',\n    upVotes: 3,\n    downVotes: 2,\n    noOfAnswer: 2,\n    questionTitle: \"what is a function\",\n    questionBody: \"It meant to be\",\n    questionTags: [\"java\", \"nodejs\"],\n    userPosted: \"harry\",\n    askedOn: \"jan1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'harry',\n      answerdOn: 'jan 2',\n      userId: 3\n    }]\n  }, {\n    id: '3',\n    upVotes: 3,\n    downVotes: 2,\n    noOfAnswer: 3,\n    questionTitle: \"what is a function\",\n    questionBody: \"It meant to be\",\n    questionTags: [\"java\", \"nodejs\", \"reactjs\", \"mongodb\"],\n    userPosted: \"mano\",\n    askedOn: \"jan1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'jack',\n      answerdOn: 'jan 2',\n      userId: 4\n    }]\n  }];\n  // const questionList = null\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)\n  //    <div className='question-detail-page'>\n  //        {            \n  //        questionList === null?\n  //         <h1>Loading..</h1> :           \n  //         <div>\n  //           { \n  //              questionList.filter(question => question._id === id).map(question => (\n  //                 <div key={question._id}>                                   \n  //                     <section className='question-details-container'>\n  //                         <h4>hello world</h4>\n  //                         <h1>{question.questionTitle}</h1>\n  //                         {console.log(question.questionTitle)}\n  //                         <div className=\"question-votes\">\n  //                             <img src={upVote} alt='upvote' width='18'/>\n  //                             <p>{question.upVotes - question.downVotes}</p>\n  //                             <img src={downVote} alt='downvote' width='18'/>\n  //                         </div>\n  //                         <div style={{width:'100%'}}>\n  //                         <h4>hello world</h4>\n  //                             <p className='question-body'>{question.questionBody}</p>\n  //                             <div className=\"question-details-tags\">\n  //                                 {\n  //                                     question.questionTags.map((tag)=>(\n  //                                         <p key={tag}>{tag}</p>\n  //                                     ))\n  //                                 }\n  //                             </div>\n  //                             <div className=\"question-action-uesr\">\n  //                                 <div>\n  //                                     <button type='button'>Share</button>\n  //                                     <button type='button'>Delete</button>\n  //                                 </div>\n  //                                 <div>\n  //                                     <p>asked {question.askedOn}</p>\n  //                                     <Link to={`/user/${question.askedOn}`} className='user-link' style={{color:'#0086d8'}}>\n  //                                         <Avatar backgroundColor='orange' px='8px' py='5px'>\n  //                                             {question.userPosted.charAt(0).toUpperCase()}\n  //                                         </Avatar>\n  //                                         <div>\n  //                                             {question.userPosted}\n  //                                         </div>\n  //                                     </Link>\n  //                                 </div>\n  //                             </div>\n  //                         </div>\n  //                     </section>\n  //                     {\n  //                         question.noOfAnswer!==0 && (\n  //                             <section>\n  //                                 <h3>{question.noOfAnswer} answer</h3>\n  //                                 <DisplayAnswer key={question._id} question={question}/>\n  //                             </section>\n  //                         )\n  //                     }\n  //                     <section className='post-ans-container'>\n  //                         <h3>Your answer </h3>\n  //                         <form>\n  //                             <textarea id=' ' cols='30' rows='10' ></textarea>\n  //                             <input type='submit' className='post-ans-btn' value='Post your answer'/>\n  //                         </form>\n  //                         <p>\n  //                             Browse other Question tagged\n  //                             {\n  //                                 question.questionTags.map((tag)=>(\n  //                                     <Link to='/Tags' key={tag} className='ans-tag'>{tag}</Link>\n  //                                 ))\n  //                             } or \n  //                             <Link to='/AskQuestion' style={{textDecoration:'none', color:'#009dff'}}>Ask your question</Link>                            \n  //                         </p>\n  //                     </section>\n  //                 </div>\n  //             ))\n  //         }\n  //         </div>\n  //     }\n  // </div>\n  ;\n};\n_s(QuestionDetails, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","Link","useParams","upVote","downVote","Avatar","DisplayAnswer","jsxDEV","_jsxDEV","QuestionDetails","_s","id","console","log","questionList","upVotes","downVotes","noOfAnswer","questionTitle","questionBody","questionTags","userPosted","askedOn","answer","answerBody","userAnswered","answerdOn","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Archana/ReactProject/StackOverflowClone/client/src/Pages/Questions/QuestionDetails.jsx"],"sourcesContent":["import React from 'react'\r\nimport './Question.css'\r\nimport { Link,useParams } from 'react-router-dom'\r\nimport upVote from '../../assets/upVote.svg'\r\nimport downVote from '../../assets/downVote.svg'\r\nimport Avatar from '../../components/Avatar/Avatar'\r\nimport DisplayAnswer from './DisplayAnswer'\r\n\r\nconst QuestionDetails = () => {\r\n    const {id} = useParams()\r\n    console.log(id)\r\n    const questionList=[{\r\n        id:'1',\r\n        upVotes:3,\r\n        downVotes:2,        \r\n        noOfAnswer: 2,\r\n        questionTitle:\"what is a function\",\r\n        questionBody:\"It meant to be\",\r\n        questionTags:[\"java\",\"nodejs\",\"reactjs\"],\r\n        userPosted:\"mano\",\r\n        askedOn:\"jan1\",\r\n        answer:[{\r\n          answerBody:\"Answer\",\r\n          userAnswered:'Kumar',\r\n          answerdOn:'jan 2',\r\n          userId:2\r\n        }]\r\n    \r\n      },\r\n      {\r\n        id:'2',\r\n        upVotes:3,\r\n        downVotes:2,        \r\n        noOfAnswer: 2,\r\n        questionTitle:\"what is a function\",\r\n        questionBody:\"It meant to be\",\r\n        questionTags:[\"java\",\"nodejs\"],\r\n        userPosted:\"harry\",\r\n        askedOn:\"jan1\",\r\n        answer:[{\r\n          answerBody:\"Answer\",\r\n          userAnswered:'harry',\r\n          answerdOn:'jan 2',\r\n          userId:3 }]\r\n      },\r\n      {\r\n        id:'3',\r\n        upVotes:3,\r\n        downVotes:2,        \r\n        noOfAnswer: 3,\r\n        questionTitle:\"what is a function\",\r\n        questionBody:\"It meant to be\",\r\n        questionTags:[\"java\",\"nodejs\",\"reactjs\",\"mongodb\"],\r\n        userPosted:\"mano\",\r\n        askedOn:\"jan1\",\r\n        answer:[{\r\n          answerBody:\"Answer\",\r\n          userAnswered:'jack',\r\n          answerdOn:'jan 2',\r\n          userId:4 }]\r\n      }]\r\n    // const questionList = null\r\n    \r\n  return (   \r\n    <div><h1>Hello world</h1></div>\r\n    //    <div className='question-detail-page'>\r\n    //        {            \r\n    //        questionList === null?\r\n    //         <h1>Loading..</h1> :           \r\n    //         <div>\r\n    //           { \r\n    //              questionList.filter(question => question._id === id).map(question => (\r\n    //                 <div key={question._id}>                                   \r\n    //                     <section className='question-details-container'>\r\n    //                         <h4>hello world</h4>\r\n    //                         <h1>{question.questionTitle}</h1>\r\n    //                         {console.log(question.questionTitle)}\r\n    //                         <div className=\"question-votes\">\r\n    //                             <img src={upVote} alt='upvote' width='18'/>\r\n    //                             <p>{question.upVotes - question.downVotes}</p>\r\n    //                             <img src={downVote} alt='downvote' width='18'/>\r\n    //                         </div>\r\n    //                         <div style={{width:'100%'}}>\r\n    //                         <h4>hello world</h4>\r\n    //                             <p className='question-body'>{question.questionBody}</p>\r\n    //                             <div className=\"question-details-tags\">\r\n    //                                 {\r\n    //                                     question.questionTags.map((tag)=>(\r\n    //                                         <p key={tag}>{tag}</p>\r\n    //                                     ))\r\n    //                                 }\r\n    //                             </div>\r\n    //                             <div className=\"question-action-uesr\">\r\n    //                                 <div>\r\n    //                                     <button type='button'>Share</button>\r\n    //                                     <button type='button'>Delete</button>\r\n    //                                 </div>\r\n    //                                 <div>\r\n    //                                     <p>asked {question.askedOn}</p>\r\n    //                                     <Link to={`/user/${question.askedOn}`} className='user-link' style={{color:'#0086d8'}}>\r\n    //                                         <Avatar backgroundColor='orange' px='8px' py='5px'>\r\n    //                                             {question.userPosted.charAt(0).toUpperCase()}\r\n    //                                         </Avatar>\r\n    //                                         <div>\r\n    //                                             {question.userPosted}\r\n    //                                         </div>\r\n    //                                     </Link>\r\n    //                                 </div>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                     </section>\r\n    //                     {\r\n    //                         question.noOfAnswer!==0 && (\r\n    //                             <section>\r\n    //                                 <h3>{question.noOfAnswer} answer</h3>\r\n    //                                 <DisplayAnswer key={question._id} question={question}/>\r\n    //                             </section>\r\n    //                         )\r\n    //                     }\r\n    //                     <section className='post-ans-container'>\r\n    //                         <h3>Your answer </h3>\r\n    //                         <form>\r\n    //                             <textarea id=' ' cols='30' rows='10' ></textarea>\r\n    //                             <input type='submit' className='post-ans-btn' value='Post your answer'/>\r\n    //                         </form>\r\n    //                         <p>\r\n    //                             Browse other Question tagged\r\n    //                             {\r\n    //                                 question.questionTags.map((tag)=>(\r\n    //                                     <Link to='/Tags' key={tag} className='ans-tag'>{tag}</Link>\r\n    //                                 ))\r\n    //                             } or \r\n    //                             <Link to='/AskQuestion' style={{textDecoration:'none', color:'#009dff'}}>Ask your question</Link>                            \r\n    //                         </p>\r\n    //                     </section>\r\n    //                 </div>\r\n    //             ))\r\n    //         }\r\n    //         </div>\r\n    //     }\r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default QuestionDetails"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}